document.addEventListener('DOMContentLoaded', async () => {
  try {
    const initData = window.Telegram.WebApp.initData;

    const response = await fetch('/auth', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ initData })
    });

    const result = await response.json();

    if (result.success) {

      // –ø–æ—Ö–æ–¥—É —ç—Ç–æ –ø–æ–∏—Å–∫ –∏–º–µ–Ω–∏ –∏ –∞–≤–∞—Ç–∞—Ä–∫–∏
      // document.getElementById('username').textContent = result.user.firstName;
      // document.getElementById('avatar').src = result.user.photoUrl;

      const serviceList = document.getElementById('serviceList');
      serviceList.innerHTML = '';

      if (result.places.length > 0) {
        result.places.forEach((place, index) => {
          const div = document.createElement('div');
          div.className = 'service-item';

          const title = document.createElement('div');
          title.textContent = place.place_name;

          const buttonGroup = document.createElement('div');
          buttonGroup.style.display = 'flex';
          buttonGroup.style.gap = '8px';

          // –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è ‚Äî —Å–ª–µ–≤–∞
          const deleteBtn = document.createElement('button');
          deleteBtn.className = 'delete-button';
          deleteBtn.innerHTML = 'üóëÔ∏è';
          deleteBtn.onclick = () => confirmDelete(place.place_id);

          // –ö–Ω–æ–ø–∫–∞ –∑–∞–ø–∏—Å–∏ ‚Äî —Å–ø—Ä–∞–≤–∞
          const bookBtn = document.createElement('button');
          bookBtn.textContent = '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è';
          bookBtn.className = 'book-button';
          bookBtn.onclick = () => {
            openChooseMasterModal(place.place_id);
          };


          // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ: —Å–Ω–∞—á–∞–ª–∞ üóë, –ø–æ—Ç–æ–º "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"
          buttonGroup.appendChild(deleteBtn);
          buttonGroup.appendChild(bookBtn);

          div.appendChild(title);
          div.appendChild(buttonGroup);
          serviceList.appendChild(div);


          if (
            index < result.places.length - 1 &&
            serviceList.lastChild?.classList?.contains('service-divider') === false
          ) {
            const divider = document.createElement('div');
            divider.className = 'service-divider';
            serviceList.appendChild(divider);
          }

        });



      } else {
        serviceList.textContent = '–°–µ—Ä–≤–∏—Å–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç';
      }

    } else {
      showNotification('–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', error);
  }
});

// –ú–æ–¥–∞–ª–∫–∏:
function openModal() {
  const overlay = document.getElementById('overlay');
  overlay.style.display = 'block'; // –≤–∫–ª—é—á–∞–µ–º overlay
  document.getElementById('addModal').style.display = 'block';
}


function closeModal() {
  document.getElementById('overlay').style.display = 'none';
  document.getElementById('addModal').style.display = 'none';
  document.getElementById('idInputModal').style.display = 'none';

  const input = document.getElementById('serviceIdInput');
  if (input) {
    input.disabled = false;
    input.value = '';
  }
}

function closeAllModals() {
  document.getElementById('overlay').style.display = 'none';

  document.getElementById('addModal').style.display = 'none';
  document.getElementById('idInputModal').style.display = 'none';
  document.getElementById('confirmModal').style.display = 'none';

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
  const menu = document.getElementById('dropdownMenu');
  const button = document.getElementById('menuButton');
  menu.style.display = 'none';
  button.textContent = '‚ò∞';

  const input = document.getElementById('serviceIdInput');
  if (input) {
    input.disabled = false;
    input.value = '';
  }

  placeIdToDelete = null;
}





function addByQR() {
  showNotification('–°–∫–∞–Ω–µ—Ä QR –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω');
  return;
}

function addByID() {
  console.log('addByID called');
  document.getElementById('addModal').style.display = 'none';
  const idModal = document.getElementById('idInputModal');
  idModal.style.display = 'block';

  const input = document.getElementById('serviceIdInput');
  input.value = '';
  input.disabled = false;

  requestAnimationFrame(() => {
    input.focus();
    console.log('Focus set via requestAnimationFrame');
  });
}



async function submitId() {
  console.log('submitId called');
  const idInput = document.getElementById('serviceIdInput');
  const id = idInput.value.trim();

  console.log('Initial: input.disabled =', idInput.disabled);

  if (!id) {
    showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID');
    return;
  }

  if (!/^\d+$/.test(id)) {
    showNotification('ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.');
    return;
  }

  try {
    const initData = window.Telegram.WebApp.initData;

    const response = await fetch('/addPlaceById', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ initData, placeId: id })
    });

    const result = await response.json();

    console.log('Response received:', result);

    if (result.success) {
      closeModal();
      showNotification('–°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
      location.reload(); // –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
    } else {
      showNotification('–û—à–∏–±–∫–∞: ' + result.error);
      idInput.value = '';
      idInput.disabled = false;
      console.log('Error case: input.disabled =', idInput.disabled);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–µ—Å—Ç–∞:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
    idInput.value = '';
    idInput.disabled = false;
    console.log('Catch case: input.disabled =', idInput.disabled);
  }
}




// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–±–æ—Ç—ã –≥–∞–º–±—É—Ä–≥–µ—Ä–∞

function toggleMenu() {
  const menu = document.getElementById('dropdownMenu');
  const button = document.getElementById('menuButton');
  const overlay = document.getElementById('overlay');

  const isOpen = menu.style.display === 'block';

  if (isOpen) {
    menu.style.display = 'none';
    button.textContent = '‚ò∞';
    overlay.style.display = 'none';
  } else {
    menu.style.display = 'block';
    button.textContent = '√ó';
    overlay.style.display = 'block';
  }
}






function showSupport() {
  window.open('https://t.me/tap_tap_support', '_blank');
  toggleMenu();
}

// —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é

function closeMenu() {
  const menu = document.getElementById('dropdownMenu');
  const button = document.getElementById('menuButton');

  menu.style.display = 'none';
  button.textContent = '‚ò∞';
}

function showNotification(message) {
  const alertBox = document.getElementById('customAlert');
  alertBox.textContent = message;
  alertBox.style.display = 'block';

  setTimeout(() => {
    alertBox.style.display = 'none';
  }, 3000); // –°–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
}

let placeIdToDelete = null;

function confirmDelete(placeId) {
  placeIdToDelete = placeId;
  document.getElementById('overlay').style.display = 'block';
  document.getElementById('confirmModal').style.display = 'block';
}


function closeConfirmModal() {
  placeIdToDelete = null;
  document.getElementById('confirmModal').style.display = 'none';
  document.getElementById('overlay').style.display = 'none';
}


async function deleteConfirmedService() {
  if (!placeIdToDelete) return;

  try {
    const initData = window.Telegram.WebApp.initData;

    const response = await fetch('/deletePlace', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ initData, placeId: placeIdToDelete })
    });

    const result = await response.json();

    closeConfirmModal();

    if (result.success) {
      showNotification('–°–µ—Ä–≤–∏—Å —É–¥–∞–ª—ë–Ω');
      location.reload();
    } else {
      showNotification('–û—à–∏–±–∫–∞: ' + result.error);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏');
    closeConfirmModal();
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏ –≤—ã–±–æ—Ä–∞ –º–∞—Å—Ç–µ—Ä–∞

let currentBookingPlaceId = null;
let selectedMaster = null;
let selectedServices = [];


function openChooseMasterModal(placeId) {
  currentBookingPlaceId = placeId;
  fetch('/getMastersByPlace', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ placeId })
  })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        const masterList = document.getElementById('masterList');
        masterList.innerHTML = '';

        data.masters.forEach(master => {
          const btn = document.createElement('button');
          btn.textContent = master.name;
          btn.onclick = () => {
            selectedMaster = master;
            closeChooseMasterModal();
            openChooseServiceModal(currentBookingPlaceId);
          };
          masterList.appendChild(btn);
        });

        document.getElementById('overlay').style.display = 'block';
        document.getElementById('chooseMasterModal').style.display = 'block';
      } else {
        showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤');
      }
    })
    .catch(err => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤:', err);
      showNotification('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞');
    });
}

function closeChooseMasterModal() {
  document.getElementById('chooseMasterModal').style.display = 'none';
  document.getElementById('overlay').style.display = 'none';
}

// –§—É–Ω–∫—Ü–∏–∏ –ø–æ–∫–∞–∑–∞ –∏ –∑–∞–∫—Ä—ã—Ç–∏—è –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥
function openChooseServiceModal(placeId) {
  fetch('/getServicesByPlace', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ placeId })
  })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        const serviceList = document.getElementById('serviceList');
        serviceList.innerHTML = '';
        selectedServices = [];

        data.services.forEach(service => {
          const label = document.createElement('label');
          label.style.display = 'block';
          label.style.marginBottom = '8px';

          const checkbox = document.createElement('input');
          checkbox.type = 'checkbox';
          checkbox.value = service.service_id;

          checkbox.onchange = () => {
            if (checkbox.checked) {
              selectedServices.push({
                id: service.service_id,
                name: service.name,
                duration: service.duration_minutes
              });
            } else {
              selectedServices = selectedServices.filter(s => s.id !== service.service_id);
            }
          };

          label.appendChild(checkbox);
          label.appendChild(document.createTextNode(` ${service.name} (${service.duration_minutes} –º–∏–Ω)`));
          serviceList.appendChild(label);
        });

        document.getElementById('chooseServiceModal').style.display = 'block';
        document.getElementById('overlay').style.display = 'block';
      } else {
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥');
      }
    })
    .catch(err => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—Å–ª—É–≥:', err);
      showNotification('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
    });
}

function closeChooseServiceModal() {
  document.getElementById('chooseServiceModal').style.display = 'none';
  document.getElementById('overlay').style.display = 'none';
}

// –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥
function submitSelectedServices() {
  if (selectedServices.length === 0) {
    showNotification('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —É—Å–ª—É–≥—É');
    return;
  }

  closeChooseServiceModal();

  const totalDuration = selectedServices.reduce((sum, s) => sum + s.duration, 0);
  console.log('–í—ã–±—Ä–∞–Ω –º–∞—Å—Ç–µ—Ä:', selectedMaster.name);
  console.log('–£—Å–ª—É–≥–∏:', selectedServices.map(s => s.name));
  console.log('–û–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:', totalDuration, '–º–∏–Ω—É—Ç');

  // –¥–∞–ª—å—à–µ –≤—ã–∑–æ–≤–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∫–∞–∑–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
  openChooseDateModal(); // —Å–¥–µ–ª–∞–µ–º –ø–æ–∑–∂–µ
}



// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞—Ç—å –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
document.addEventListener('click', function (event) {
  const menu = document.getElementById('dropdownMenu');
  const button = document.getElementById('menuButton');
  if (menu.style.display === 'block' &&
    !menu.contains(event.target) &&
    event.target !== button) {
    menu.style.display = 'none';
    button.textContent = '‚ò∞';
  }
});
