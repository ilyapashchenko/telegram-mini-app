document.addEventListener('DOMContentLoaded', async () => {
  window.Telegram.WebApp.expand();

  try {
    const initData = window.Telegram.WebApp.initData;

    const response = await fetch('/auth', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ initData })
    });

    const result = await response.json();

    if (result.success) {

      // –ø–æ—Ö–æ–¥—É —ç—Ç–æ –ø–æ–∏—Å–∫ –∏–º–µ–Ω–∏ –∏ –∞–≤–∞—Ç–∞—Ä–∫–∏
      // document.getElementById('username').textContent = result.user.firstName;
      // document.getElementById('avatar').src = result.user.photoUrl;

      const serviceList = document.getElementById('serviceList');
      serviceList.innerHTML = '';

      if (result.places.length > 0) {
        result.places.forEach((place, index) => {
          const div = document.createElement('div');
          div.className = 'service-item';

          const title = document.createElement('div');
          title.textContent = place.place_name;

          const buttonGroup = document.createElement('div');
          buttonGroup.style.display = 'flex';
          buttonGroup.style.gap = '8px';

          // –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è ‚Äî —Å–ª–µ–≤–∞
          const deleteBtn = document.createElement('button');
          deleteBtn.className = 'delete-button';
          deleteBtn.innerHTML = 'üóëÔ∏è';
          deleteBtn.onclick = () => confirmDelete(place.place_id);

          // –ö–Ω–æ–ø–∫–∞ –∑–∞–ø–∏—Å–∏ ‚Äî —Å–ø—Ä–∞–≤–∞
          const bookBtn = document.createElement('button');
          bookBtn.textContent = '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è';
          bookBtn.className = 'book-button';
          bookBtn.onclick = () => {
            openChooseMasterModal(place.place_id);
          };


          // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ: —Å–Ω–∞—á–∞–ª–∞ üóë, –ø–æ—Ç–æ–º "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è"
          buttonGroup.appendChild(deleteBtn);
          buttonGroup.appendChild(bookBtn);

          div.appendChild(title);
          div.appendChild(buttonGroup);
          serviceList.appendChild(div);


          if (
            index < result.places.length - 1 &&
            serviceList.lastChild?.classList?.contains('service-divider') === false
          ) {
            const divider = document.createElement('div');
            divider.className = 'service-divider';
            serviceList.appendChild(divider);
          }

        });



      } else {
        serviceList.textContent = '–°–µ—Ä–≤–∏—Å–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç';
      }

    } else {
      showNotification('–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', error);
  }
});

// –ú–æ–¥–∞–ª–∫–∏:
function openModal() {
  const overlay = document.getElementById('overlay');
  overlay.style.display = 'block'; // –≤–∫–ª—é—á–∞–µ–º overlay
  document.getElementById('addModal').style.display = 'block';
}


function closeModal() {
  document.getElementById('overlay').style.display = 'none';
  document.getElementById('addModal').style.display = 'none';
  document.getElementById('idInputModal').style.display = 'none';

  const input = document.getElementById('serviceIdInput');
  if (input) {
    input.disabled = false;
    input.value = '';
  }
}

function closeAllModals() {
  document.getElementById('overlay').style.display = 'none';

  document.getElementById('addModal').style.display = 'none';
  document.getElementById('idInputModal').style.display = 'none';
  document.getElementById('confirmModal').style.display = 'none';

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
  const menu = document.getElementById('dropdownMenu');
  const button = document.getElementById('menuButton');
  menu.style.display = 'none';
  button.textContent = '‚ò∞';

  const input = document.getElementById('serviceIdInput');
  if (input) {
    input.disabled = false;
    input.value = '';
  }

  placeIdToDelete = null;
}





function addByQR() {
  showNotification('–°–∫–∞–Ω–µ—Ä QR –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω');
  return;
}

function addByID() {
  console.log('addByID called');
  document.getElementById('addModal').style.display = 'none';
  const idModal = document.getElementById('idInputModal');
  idModal.style.display = 'block';

  const input = document.getElementById('serviceIdInput');
  input.value = '';
  input.disabled = false;

  requestAnimationFrame(() => {
    input.focus();
    console.log('Focus set via requestAnimationFrame');
  });
}



async function submitId() {
  console.log('submitId called');
  const idInput = document.getElementById('serviceIdInput');
  const id = idInput.value.trim();

  console.log('Initial: input.disabled =', idInput.disabled);

  if (!id) {
    showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID');
    return;
  }

  if (!/^\d+$/.test(id)) {
    showNotification('ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.');
    return;
  }

  try {
    const initData = window.Telegram.WebApp.initData;

    const response = await fetch('/addPlaceById', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ initData, placeId: id })
    });

    const result = await response.json();

    console.log('Response received:', result);

    if (result.success) {
      closeModal();
      showNotification('–°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
      location.reload(); // –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
    } else {
      showNotification('–û—à–∏–±–∫–∞: ' + result.error);
      idInput.value = '';
      idInput.disabled = false;
      console.log('Error case: input.disabled =', idInput.disabled);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–µ—Å—Ç–∞:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
    idInput.value = '';
    idInput.disabled = false;
    console.log('Catch case: input.disabled =', idInput.disabled);
  }
}




// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–±–æ—Ç—ã –≥–∞–º–±—É—Ä–≥–µ—Ä–∞

function toggleMenu() {
  const menu = document.getElementById('dropdownMenu');
  const button = document.getElementById('menuButton');
  const overlay = document.getElementById('overlay');

  const isOpen = menu.style.display === 'block';

  if (isOpen) {
    menu.style.display = 'none';
    button.textContent = '‚ò∞';
    overlay.style.display = 'none';
  } else {
    menu.style.display = 'block';
    button.textContent = '√ó';
    overlay.style.display = 'block';
  }
}






function showSupport() {
  window.open('https://t.me/tap_tap_support', '_blank');
  toggleMenu();
}

// —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é

function closeMenu() {
  const menu = document.getElementById('dropdownMenu');
  const button = document.getElementById('menuButton');

  menu.style.display = 'none';
  button.textContent = '‚ò∞';
}

function showNotification(message) {
  const alertBox = document.getElementById('customAlert');
  alertBox.textContent = message;
  alertBox.style.display = 'block';

  setTimeout(() => {
    alertBox.style.display = 'none';
  }, 3000); // –°–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
}

let placeIdToDelete = null;

function confirmDelete(placeId) {
  placeIdToDelete = placeId;
  document.getElementById('overlay').style.display = 'block';
  document.getElementById('confirmModal').style.display = 'block';
}


function closeConfirmModal() {
  placeIdToDelete = null;
  document.getElementById('confirmModal').style.display = 'none';
  document.getElementById('overlay').style.display = 'none';
}


async function deleteConfirmedService() {
  if (!placeIdToDelete) return;

  try {
    const initData = window.Telegram.WebApp.initData;

    const response = await fetch('/deletePlace', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ initData, placeId: placeIdToDelete })
    });

    const result = await response.json();

    closeConfirmModal();

    if (result.success) {
      showNotification('–°–µ—Ä–≤–∏—Å —É–¥–∞–ª—ë–Ω');
      location.reload();
    } else {
      showNotification('–û—à–∏–±–∫–∞: ' + result.error);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏');
    closeConfirmModal();
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏ –≤—ã–±–æ—Ä–∞ –º–∞—Å—Ç–µ—Ä–∞

// –ü–ï–†–ï–ú–ï–ù–ù–´–ï
let currentBookingPlaceId = null;
let selectedMaster = null;
let selectedServices = [];
let selectedDate = null;
let totalDuration = 0;
let selectedSlot = null;
let bookingDuration = 0;



// –í–´–ë–û–† –ú–ê–°–¢–ï–†–ê
function openChooseMasterModal(placeId) {
  currentBookingPlaceId = placeId;
  fetch('/getMastersByPlace', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ placeId })
  })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        const masterList = document.getElementById('masterList');
        masterList.innerHTML = '';

        data.masters.forEach(master => {
          const btn = document.createElement('button');
          btn.textContent = master.name;
          btn.onclick = () => {
            selectedMaster = master;
            closeChooseMasterModal();
            openChooseServiceModal(currentBookingPlaceId);
          };
          masterList.appendChild(btn);
        });

        document.getElementById('overlay').style.display = 'block';
        document.getElementById('chooseMasterModal').style.display = 'block';
      } else {
        showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤');
      }
    })
    .catch(err => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤:', err);
      showNotification('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞');
    });
}

function closeChooseMasterModal() {
  document.getElementById('chooseMasterModal').style.display = 'none';
  document.getElementById('overlay').style.display = 'none';
}


















// –í–´–ë–û–† –£–°–õ–£–ì–ò
function openChooseServiceModal(placeId) {
  fetch('/getServicesByPlace', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ placeId })
  })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        const serviceList = document.getElementById('serviceSelectList');
        serviceList.innerHTML = '';
        selectedServices = [];

        data.services.forEach(service => {
          const label = document.createElement('label');
          label.style.display = 'block';
          label.style.marginBottom = '8px';

          const checkbox = document.createElement('input');
          checkbox.type = 'checkbox';
          checkbox.value = service.service_id;

          // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ data-–∞—Ç—Ä–∏–±—É—Ç—ã
          checkbox.dataset.name = service.name;
          checkbox.dataset.duration = service.duration_minutes;

          checkbox.onchange = () => {
            if (checkbox.checked) {
              selectedServices.push({
                id: service.service_id,
                name: service.name,
                duration: service.duration_minutes
              });
            } else {
              selectedServices = selectedServices.filter(s => s.id !== service.service_id);
            }
          };

          label.appendChild(checkbox);
          label.appendChild(document.createTextNode(` ${service.name} (${service.duration_minutes} –º–∏–Ω)`));
          serviceList.appendChild(label);
        });

        document.getElementById('chooseServiceModal').style.display = 'block';
        document.getElementById('overlay').style.display = 'block';
      } else {
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥');
      }
    })
    .catch(err => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—Å–ª—É–≥:', err);
      showNotification('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
    });
}


// –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥
function submitSelectedServices() {
  // –°–æ–±–∏—Ä–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ –∏–∑ —á–µ–∫–±–æ–∫—Å–æ–≤
  selectedServices = Array.from(document.querySelectorAll('#serviceSelectList input[type="checkbox"]:checked')).map(input => ({
    id: input.value,
    name: input.dataset.name,
    duration: Number(input.dataset.duration)
  }));

  if (selectedServices.length === 0) {
    showNotification('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —É—Å–ª—É–≥—É');
    return;
  }

  closeChooseServiceModal();

  bookingDuration = selectedServices.reduce((sum, s) => sum + s.duration, 0);
  console.log('–í—ã–±—Ä–∞–Ω –º–∞—Å—Ç–µ—Ä:', selectedMaster.name);
  console.log('–£—Å–ª—É–≥–∏:', selectedServices.map(s => s.name));
  console.log('–û–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:', totalDuration, '–º–∏–Ω—É—Ç');

  // –¥–∞–ª—å—à–µ –≤—ã–∑–æ–≤–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∫–∞–∑–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
  // const selectedDate = '2025-07-11'; // –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∞—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∞

  // openChooseTimeModal(selectedDate, totalDuration);
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤–º–µ—Å—Ç–æ —Å–ª–æ—Ç–æ–≤ —Å—Ä–∞–∑—É
  openChooseDateModal();

}

function closeChooseServiceModal() {
  document.getElementById('chooseServiceModal').style.display = 'none';
  document.getElementById('overlay').style.display = 'none';
}

// –ø–æ–¥–≥—Ä—É–∑–∫–∞ —á–µ–∫–±–æ–∫—Å–æ–≤
function renderServices(services) {
  const serviceSelectList = document.getElementById('serviceSelectList');
  serviceSelectList.innerHTML = ''; // –æ—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ –≤—Å—Ç–∞–≤–∫–æ–π

  services.forEach(service => {
    const label = document.createElement('label');
    label.style.display = 'block'; // —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π —á–µ–∫–±–æ–∫—Å –±—ã–ª —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
    label.innerHTML = `
      <input type="checkbox" 
             value="${service.service_id}" 
             data-name="${service.service_name}" 
             data-duration="${service.duration}">
      ${service.service_name} (${service.duration} –º–∏–Ω)
    `;
    serviceSelectList.appendChild(label);
  });
}













// –í–´–ë–û–† –î–ê–¢–´
function openChooseDateModal() {
  const dateInput = document.getElementById('bookingDatePicker');

  const today = new Date().toISOString().split('T')[0];
  dateInput.min = today;
  dateInput.value = today;

  selectedDate = today;

  dateInput.onchange = () => {
    selectedDate = dateInput.value;
  };

  document.getElementById('chooseDateModal').style.display = 'block';
  document.getElementById('overlay').style.display = 'block';
}

function closeChooseDateModal() {
  document.getElementById('chooseDateModal').style.display = 'none';
  document.getElementById('overlay').style.display = 'none';
}

function submitSelectedDate() {
  if (!selectedDate) {
    showNotification('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É');
    return;
  }

  console.log('–î–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞:', selectedDate);

  closeChooseDateModal();

  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É: –≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ (—Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã)
  openChooseTimeModal(selectedDate, bookingDuration);
  // openChooseSlotModal(); // —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é —Å–¥–µ–ª–∞–µ–º –¥–∞–ª—å—à–µ
}


















//–í–´–ë–û–† –í–†–ï–ú–ï–ù–ò
function openChooseTimeModal(date, totalDuration) {
  console.log('üîç masterId:', selectedMaster?.master_id);
  console.log('üìÖ date:', date);
  console.log('‚è± duration:', totalDuration);
  fetch('/getFreeSlots', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      masterId: selectedMaster.master_id,
      date: date,
      duration: totalDuration
    })
  })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        const slotList = document.getElementById('slotList');
        slotList.innerHTML = '';

        if (data.slots.length === 0) {
          showNotification('–í —ç—Ç–æ—Ç –¥–µ–Ω—å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é');
          return;
        }

        
        data.slots.forEach(slot => {
          const btn = document.createElement('button');
          btn.textContent = slot;
          btn.className = 'slot-button';

          btn.onclick = () => {
            // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ
            document.querySelectorAll('.slot-button').forEach(b => b.classList.remove('selected'));
            btn.classList.add('selected');

            // –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–ª–æ—Ç
            selectedSlot = slot;

            // –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–ø–∏—Å–∏
            document.getElementById('confirmBookingBtn').disabled = false;
          };

          slotList.appendChild(btn);
        });

        document.getElementById('chooseTimeModal').style.display = 'block';
        document.getElementById('overlay').style.display = 'block';
      } else {
        showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏');
      }
    })
    .catch(err => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ª–æ—Ç–æ–≤:', err);
      showNotification('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
    });
}

function closeChooseTimeModal() {
  document.getElementById('chooseTimeModal').style.display = 'none';
  document.getElementById('overlay').style.display = 'none';
  selectedSlot = null;
  document.getElementById('confirmBookingBtn').disabled = true;
}













// –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –ó–ê–ü–ò–°–ò
function submitBooking() {
  if (!selectedSlot || !selectedDate || !selectedMaster || selectedServices.length === 0) {
    showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏');
    return;
  }

  const initData = window.Telegram.WebApp.initData;

  fetch('/createBooking', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      initData,
      masterId: selectedMaster.master_id,
      date: selectedDate,
      time: selectedSlot,
      services: selectedServices
    })
  })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        showNotification('–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã!');
        closeChooseTimeModal(); // –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
      } else {
        showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏: ' + data.error);
      }
    })
    .catch(err => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏:', err);
      showNotification('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏');
    });
}










// –ü–ï–†–ï–ö–õ–Æ–ß–ê–¢–ï–õ–¨ –ú–ï–ñ–î–£ –û–°–ù–û–í–ù–´–ú–ò –û–ö–ù–ê–ú–ò 

function switchTab(tab) {
  console.log('üëâ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –Ω–∞:', tab);

  const screens = document.querySelectorAll('.screen');
  screens.forEach(screen => screen.style.display = 'none');

  const title = document.getElementById('mainTitle');

  if (tab === 'home') {
    console.log('‚û°Ô∏è –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω');
    document.getElementById('mainScreen').style.display = 'block';
    if (title) {
      title.style.display = 'block';
      title.textContent = '–í–∞—à–∏ —Å–µ—Ä–≤–∏—Å—ã:';
    }
  } else if (tab === 'bookings') {
    console.log('‚û°Ô∏è –û—Ç–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–ø–∏—Å–µ–π');
    document.getElementById('bookingsScreen').style.display = 'block';
    loadBookings();
    if (title) {
      title.style.display = 'block';
      title.textContent = '–í–∞—à–∏ –∑–∞–ø–∏—Å–∏:';
    }
  } else if (tab === 'business') {
    console.log('‚û°Ô∏è –û—Ç–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –ë–∏–∑–Ω–µ—Å');
    document.getElementById('businessScreen').style.display = 'block';
    if (title) {
      title.style.display = 'none'; // —É –±–∏–∑–Ω–µ—Å-—ç–∫—Ä–∞–Ω–∞ —Å–≤–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
    }
    loadBusinessContent(); // –≤—ã–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –±–∏–∑–Ω–µ—Å-–∫–æ–Ω—Ç–µ–Ω—Ç–∞
  }
}








// –§–£–ù–ö–¶–ò–Ø –ó–ê–ì–†–£–ó–ö–ò –ó–ê–ü–ò–°–ï–ô
function loadBookings() {
  const initData = window.Telegram.WebApp.initData;

  fetch('/getUserBookings', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ initData })
  })
    .then(res => res.json())
    .then(data => {
      const list = document.getElementById('bookingList');
      list.innerHTML = '';

      if (data.success && data.bookings.length > 0) {
        data.bookings.forEach(booking => {
          const formattedDate = new Date(booking.date).toLocaleDateString('ru-RU', {
            day: '2-digit',
            month: 'long',
            year: 'numeric'
          });

          const formattedTime = booking.time.slice(0, 5); // –û–±—Ä–µ–∑–∞–µ–º –¥–æ HH:MM

          const div = document.createElement('div');
          div.className = 'booking-card';
          div.innerHTML = `
            <strong>${booking.service_name}</strong><br>
            –î–∞—Ç–∞: ${formattedDate}<br>
            –í—Ä–µ–º—è: ${formattedTime}<br>
            –ú–∞—Å—Ç–µ—Ä: ${booking.master_name}<br>
            –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${booking.duration} –º–∏–Ω
          `;
          list.appendChild(div);
        });
      } else {
        list.innerHTML = '<div>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π.</div>';
      }
    })
    .catch(err => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π:', err);
      showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–ø–∏—Å–∏');
    });
}




function formatDate(dateStr) {
  const date = new Date(dateStr);
  return date.toLocaleDateString('ru-RU', {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric'
  });
}



// –§–£–ù–ö–¶–ò–Ø –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ö–û–ù–¢–ï–ù–¢–ê –î–õ–Ø –≠–ö–†–ê–ù–ê –ë–ò–ó–ù–ï–°
// –û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è loadBusinessContent —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –¥–∞—Ç–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –º–∞—Å—Ç–µ—Ä–∞
async function loadBusinessContent() {
  console.log('üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∏–∑–Ω–µ—Å-–∫–æ–Ω—Ç–µ–Ω—Ç...');

  const businessContent = document.getElementById('businessContent');
  businessContent.innerHTML = '–ó–∞–≥—Ä—É–∑–∫–∞...';

  try {
    const initData = window.Telegram.WebApp.initData;
    console.log('üì¶ initData:', initData);

    const response = await fetch('/api/getUserRole', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ initData })
    });

    console.log('üì® –û—Ç–≤–µ—Ç –æ—Ç /api/getUserRole –ø–æ–ª—É—á–µ–Ω');
    const data = await response.json();
    console.log('üì® –†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç:', data);

    if (!data.success) {
      console.warn('‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–æ–ª–∏:', data.error || 'unknown');
      businessContent.innerHTML = '<p>–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</p>';
      return;
    }

    if (data.role === 'client') {
      console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî –æ–±—ã—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç');
      businessContent.innerHTML = `
        <p>–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Å–≤–æ–π –±–∏–∑–Ω–µ—Å –∫ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–∏—Å—É, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º</p>
        <button id="contactButton" class="modal-button">–°–≤—è–∑–∞—Ç—å—Å—è</button>
      `;
      document.getElementById('contactButton').onclick = () => {
        console.log('üìû –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–°–≤—è–∑–∞—Ç—å—Å—è"');
        showSupport();
      };

    } else if (data.role === 'staff') {
      console.log('üßë‚Äçüíº –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî —Å–æ—Ç—Ä—É–¥–Ω–∏–∫. –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–ø–∏—Å–∏...');

      // üëâ –î–æ–±–∞–≤–∏–º –ø–æ–ª–µ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
      const today = new Date().toISOString().split('T')[0];
      businessContent.innerHTML = `
        <label for="datePicker">–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:</label>
        <input type="date" id="datePicker" value="${today}">
        <div id="recordsTable">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–µ–π...</div>
      `;

      const datePicker = document.getElementById('datePicker');
      const recordsTable = document.getElementById('recordsTable');

      const fetchBookings = async (selectedDate) => {
        const bookingsResponse = await fetch('/api/getStaffBookings', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ initData, selectedDate })
        });

        console.log('üì® –û—Ç–≤–µ—Ç –æ—Ç /api/getStaffBookings –ø–æ–ª—É—á–µ–Ω');
        const bookingsData = await bookingsResponse.json();
        console.log('üì® –†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏:', bookingsData);

        if (!bookingsData.success) {
          console.warn('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–ø–∏—Å–µ–π:', bookingsData.error || 'unknown');
          recordsTable.innerHTML = '<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–ø–∏—Å–µ–π.</p>';
          return;
        }

        if (bookingsData.bookings.length === 0) {
          console.log('‚ÑπÔ∏è –£ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π');
          recordsTable.innerHTML = '<p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –Ω–∞ —ç—Ç—É –¥–∞—Ç—É.</p>';
          return;
        }

        console.log('‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏');
        let html = '<table><thead><tr><th>–í—Ä–µ–º—è</th><th>–ö–ª–∏–µ–Ω—Ç</th><th>–£—Å–ª—É–≥–∞</th><th>–ú–∞—Å—Ç–µ—Ä</th></tr></thead><tbody>';

        bookingsData.bookings.forEach(b => {
          html += `<tr>
            <td>${b.time.slice(0, 5)}</td>
            <td>${b.client_name || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}</td>
            <td>${b.services_names}</td>
            <td>${b.master_name || '‚Äî'}</td>
          </tr>`;
        });

        html += '</tbody></table>';
        recordsTable.innerHTML = html;
      };

      await fetchBookings(today);

      datePicker.addEventListener('change', (e) => {
        const selectedDate = e.target.value;
        fetchBookings(selectedDate);
      });

    } else {
      console.warn('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å:', data.role);
      businessContent.innerHTML = '<p>–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞.</p>';
    }

  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –≤ loadBusinessContent:', error);
    businessContent.innerHTML = '<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.</p>';
  }
}








// –ü–û–ö–ê–ó–´–í–ê–¢–¨ –ì–õ–ê–í–ù–´–ô –≠–ö–†–ê–ù –ü–†–ò –ó–ê–ü–£–°–ö–ï
document.addEventListener('DOMContentLoaded', () => {
  switchTab('home');
});



// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞—Ç—å –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
document.addEventListener('click', function (event) {
  const menu = document.getElementById('dropdownMenu');
  const button = document.getElementById('menuButton');
  if (menu.style.display === 'block' &&
    !menu.contains(event.target) &&
    event.target !== button) {
    menu.style.display = 'none';
    button.textContent = '‚ò∞';
  }
});
